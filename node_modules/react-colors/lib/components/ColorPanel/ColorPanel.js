'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorPanel = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /* 选择色度和明度 */

// todo: 改变样式实现
// todo: 添加x，y轴配置

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _calcEventPosition = require('../../helpers/calcEventPosition');

var _calcEventPosition2 = _interopRequireDefault(_calcEventPosition);

var _throttle = require('lodash/throttle');

var _throttle2 = _interopRequireDefault(_throttle);

var _CirclePointer = require('./CirclePointer');

var _CirclePointer2 = _interopRequireDefault(_CirclePointer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorPanel = exports.ColorPanel = (_temp = _class = function (_ref) {
  _inherits(ColorPanel, _ref);

  function ColorPanel(props) {
    _classCallCheck(this, ColorPanel);

    // 50ms内不重复触发,todo 使用
    var _this = _possibleConstructorReturn(this, (ColorPanel.__proto__ || Object.getPrototypeOf(ColorPanel)).call(this, props));

    _this.handleChange = function (e) {
      var c = _this.getColor(e);
      _this.props.onChange(c, e);
    };

    _this.handleMouseDown = function (e) {
      _this.handleChange(e, true);
      window.addEventListener('mousemove', _this.handleChange);
      window.addEventListener('mouseup', _this.handleMouseUp);
    };

    _this.handleMouseUp = function () {
      _this.unbindEventListeners();
    };

    _this.handleChange = (0, _throttle2.default)(_this.handleChange, 50);
    return _this;
  }

  _createClass(ColorPanel, [{
    key: 'getBackground',
    value: function getBackground() {
      var props = this.props;
      var background = {
        'rgb.r': 'linear-gradient(to top right, rgba(' + Math.round(props.color[0]) + ',0,0,1),transparent, rgba(' + Math.round(props.color[0]) + ',255,255,1) ), \n          linear-gradient(to bottom right, rgb(' + Math.round(props.color[0]) + ',255,0), rgb(' + Math.round(props.color[0]) + ',0,255) )',
        'rgb.g': 'linear-gradient(to top right, rgba(0,' + Math.round(props.color[1]) + ',0,1),transparent, rgba(255,' + Math.round(props.color[1]) + ',255,1) ), \n          linear-gradient(to bottom right, rgb(255,' + Math.round(props.color[1]) + ',0), rgb(0,' + Math.round(props.color[1]) + ',255) )',
        'rgb.b': 'linear-gradient(to top right, rgba(0,0,' + Math.round(props.color[2]) + ',1),transparent, rgba(255,255,' + Math.round(props.color[2]) + ',1) ), \n          linear-gradient(to bottom right, rgb(0,255,' + Math.round(props.color[2]) + '), rgb(255,0,' + Math.round(props.color[2]) + ') )',
        'hsv.h': 'linear-gradient(to top, #000, transparent),linear-gradient(to right, #FFF, rgba(255,255,255,0)),\n          linear-gradient(to top, hsl(' + props.color[0] + ', 100%, 50%), hsl(' + props.color[0] + ', 100%, 50%))',
        'hsv.s': 'linear-gradient(to top, #000, transparent), linear-gradient(rgba(255,255,255,' + (1 - props.color[1]) + '), rgba(255,255,255,' + (1 - props.color[1]) + ')),\n          linear-gradient(to right, #f00 0%, #ff0 17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%)',
        'hsv.v': 'linear-gradient(to top, rgba(0,0,0,' + (1 - props.color[2]) + '), rgba(0,0,0,' + (1 - props.color[2]) + ')),linear-gradient(to top, #fff, transparent), \n          linear-gradient(to right, #f00 0%, #ff0 17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%)'
      };

      return background[props.model];
    }
  }, {
    key: 'getColor',
    value: function getColor(e) {
      var _props = this.props,
          color = _props.color,
          model = _props.model;

      var p = (0, _calcEventPosition2.default)(e, this.container);
      var newColor = {
        'rgb.r': [color[0], 255 - p.topP * 255, p.leftP * 255],
        'rgb.g': [255 - p.topP * 255, color[1], p.leftP * 255],
        'rgb.b': [p.leftP * 255, 255 - p.topP * 255, color[2]],
        'hsv.h': [color[0], p.leftP, 1 - p.topP],
        'hsv.s': [p.leftP * 360, color[1], 1 - p.topP],
        'hsv.v': [p.leftP * 360, 1 - p.topP, color[2]]
      };
      return newColor[model];
    }
  }, {
    key: 'getPosition',
    value: function getPosition() {
      var _props2 = this.props,
          color = _props2.color,
          model = _props2.model;

      var position = {
        'rgb.r': {
          leftP: color[2] / 255,
          topP: 1 - color[1] / 255
        },
        'rgb.g': {
          leftP: color[2] / 255,
          topP: 1 - color[0] / 255
        },
        'rgb.b': {
          leftP: color[0] / 255,
          topP: 1 - color[1] / 255
        },
        'hsv.h': {
          leftP: color[1],
          topP: 1 - color[2]
        },
        'hsv.s': {
          leftP: color[0] / 360,
          topP: 1 - color[2]
        },
        'hsv.v': {
          leftP: color[0] / 360,
          topP: 1 - color[1]
        }
      };
      return position[model];
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.unbindEventListeners();
    }
  }, {
    key: 'unbindEventListeners',
    value: function unbindEventListeners() {
      window.removeEventListener('mousemove', this.handleChange);
      window.removeEventListener('mouseup', this.handleMouseUp);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props3 = this.props,
          pointer = _props3.pointer,
          style = _props3.style,
          labelStyle = _props3.labelStyle;


      var p = this.getPosition();
      var styles = {
        root: Object.assign({
          position: 'relative',
          height: '100%',
          background: this.getBackground(),
          cursor: 'default'
        }, style),
        pointer: Object.assign({
          position: 'absolute',
          top: p.topP * 100 + '%',
          left: p.leftP * 100 + '%'
        }, labelStyle)
      };

      return _react2.default.createElement(
        'div',
        {
          style: styles.root,
          ref: function ref(node) {
            return _this2.container = node;
          },
          onMouseDown: this.handleMouseDown,
          onTouchMove: this.handleChange,
          onTouchStart: this.handleChange
        },
        _react2.default.createElement(
          'div',
          { style: styles.pointer },
          pointer
        )
      );
    }
  }]);

  return ColorPanel;
}(_react.PureComponent || _react.Component), _class.displayName = 'ColorPanel', _class.propTypes = {
  model: _react.PropTypes.oneOf(['rgb.r', 'rgb.g', 'rgb.b', 'hsv.h', 'hsv.s', 'hsv.v']),
  pointer: _react.PropTypes.node,
  rgb: _react.PropTypes.object,
  hsv: _react.PropTypes.object,
  onChange: _react.PropTypes.func
}, _class.defaultProps = {
  pointer: _react2.default.createElement(_CirclePointer2.default, null)
}, _temp);
exports.default = ColorPanel;