'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorInput = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /* 颜色属性输入 */

// todo: 添加propTypes和defaultProps
// todo: debug拖动改数功能
// todo: 客制化标签
// todo: 配置小数点位数
// todo: Lab值变化bug
// todo: fix cmyk.k

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ColorInputChild = require('./ColorInputChild');

var _ColorInputChild2 = _interopRequireDefault(_ColorInputChild);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorInput = exports.ColorInput = (_temp = _class = function (_ref) {
  _inherits(ColorInput, _ref);

  function ColorInput() {
    _classCallCheck(this, ColorInput);

    return _possibleConstructorReturn(this, (ColorInput.__proto__ || Object.getPrototypeOf(ColorInput)).apply(this, arguments));
  }

  _createClass(ColorInput, [{
    key: 'getDefaultLabel',
    value: function getDefaultLabel(model) {
      return {
        'rgb.r': 'R',
        'rgb.g': 'G',
        'rgb.b': 'B',
        'hsv.h': 'H',
        'hsv.s': 'S',
        'hsv.v': 'V',
        'lab.l': 'L',
        'lab.a': 'a',
        'lab.b': 'b',
        'cmyk.c': 'C',
        'cmyk.m': 'M',
        'cmyk.y': 'Y',
        'cmyk.k': 'K',
        'alpha': 'a',
        'hex': '#'
      }[model];
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          label = _props.label,
          rightLabel = _props.rightLabel,
          labelStyle = _props.labelStyle,
          rightLabelStyle = _props.rightLabelStyle,
          inputStyle = _props.inputStyle,
          props = _objectWithoutProperties(_props, ['style', 'label', 'rightLabel', 'labelStyle', 'rightLabelStyle', 'inputStyle']);

      var styles = {
        root: Object.assign({
          display: 'inline-block',
          position: 'relative',
          marginBottom: 4
        }, style),
        label: Object.assign({
          display: 'inline-block',
          height: '100%',
          fontSize: 13,
          verticalAlign: 'top',
          width: 20,
          lineHeight: '20px'
        }, labelStyle),
        rightLabel: Object.assign({
          display: 'inline-block',
          height: '100%',
          fontSize: 13,
          verticalAlign: 'top',
          paddingLeft: 4,
          lineHeight: '20px'
        }, rightLabelStyle),
        input: Object.assign({
          verticalAlign: 'top',
          width: 40,
          boxSizing: 'border-box',
          height: 20,
          padding: '0 2px',
          fontSize: 12
        }, inputStyle)
      };

      return _react2.default.createElement(
        'div',
        { style: styles.root },
        _react2.default.createElement(
          'span',
          { style: styles.label },
          label || this.getDefaultLabel(props.model)
        ),
        _react2.default.createElement(_ColorInputChild2.default, _extends({ style: styles.input }, props)),
        _react2.default.createElement(
          'span',
          { style: styles.rightLabel },
          rightLabel
        )
      );
    }
  }]);

  return ColorInput;
}(_react.PureComponent || _react.Component), _class.displayName = 'ColorInput', _class.propTypes = {
  model: _react.PropTypes.oneOf(['rgb.r', 'rgb.g', 'rgb.b', 'hsv.h', 'hsv.s', 'hsv.v', 'lab.l', 'lab.a', 'lab.b', 'cmyk.c', 'cmyk.m', 'cmyk.y', 'cmyk.k', 'hex', 'alpha']),
  style: _react.PropTypes.object,
  label: _react.PropTypes.node,
  rightLabel: _react.PropTypes.node,
  labelStyle: _react.PropTypes.object,
  rightLabelStyle: _react.PropTypes.object,
  inputStyle: _react.PropTypes.object
}, _temp);
exports.default = ColorInput;