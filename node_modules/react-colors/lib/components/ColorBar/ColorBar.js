'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _throttle = require('lodash/throttle');

var _throttle2 = _interopRequireDefault(_throttle);

var _calcEventPosition = require('../../helpers/calcEventPosition');

var _calcEventPosition2 = _interopRequireDefault(_calcEventPosition);

var _RectPointer = require('./RectPointer');

var _RectPointer2 = _interopRequireDefault(_RectPointer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorBar = (_temp = _class = function (_ref) {
  _inherits(ColorBar, _ref);

  function ColorBar(props) {
    _classCallCheck(this, ColorBar);

    var _this = _possibleConstructorReturn(this, (ColorBar.__proto__ || Object.getPrototypeOf(ColorBar)).call(this, props));

    _this.handleChange = function (e) {
      var newColor = _this.getColor(e);
      _this.props.onChange(newColor, e);
    };

    _this.handleMouseDown = function (e) {
      _this.handleChange(e);
      window.addEventListener('mousemove', _this.handleChange);
      window.addEventListener('mouseup', _this.handleMouseUp);
    };

    _this.handleMouseUp = function () {
      _this.unbindEventListeners();
    };

    _this.handleChange = (0, _throttle2.default)(_this.handleChange, 50);
    return _this;
  }

  _createClass(ColorBar, [{
    key: 'getBackground',
    value: function getBackground() {
      var _props = this.props,
          color = _props.color,
          model = _props.model,
          direction = _props.direction;

      var direct = direction === 'vertical' ? 'top' : 'left';
      var background = {
        'rgb.r': 'linear-gradient(to ' + direct + ', rgb(0,' + Math.round(color[1]) + ',' + Math.round(color[2]) + '), \n\t\t\t\t\trgb(255, ' + Math.round(color[1]) + ', ' + Math.round(color[2]) + ')',
        'rgb.g': 'linear-gradient(to ' + direct + ', rgb(' + Math.round(color[0]) + ',0,' + Math.round(color[2]) + '), \n\t\t\t\t\trgb(' + Math.round(color[0]) + ',255,' + Math.round(color[2]) + ')',
        'rgb.b': 'linear-gradient(to ' + direct + ', rgb(' + Math.round(color[0]) + ',' + Math.round(color[1]) + ',0), \n\t\t\t\t\trgb(' + Math.round(color[0]) + ',' + Math.round(color[1]) + ',255)',
        'hsv.h': 'linear-gradient(to ' + direct + ', #f00 0%, #ff0 17%, #0f0 33%,\n          #0ff 50%, #00f 67%, #f0f 83%, #f00 100%)',
        'hsv.s': 'linear-gradient(to ' + direct + ',rgba(0,0,0,' + (1 - color[2]) + '),rgba(0,0,0,' + (1 - color[2]) + ')),\n          linear-gradient(to ' + direct + ',hsl(' + color[0] + ',100%,100%),hsl(' + color[0] + ',100%,50%))',
        'hsv.v': 'linear-gradient(to ' + direct + ',rgba(0,0,0,1),transparent),\n          linear-gradient(to ' + direct + ',hsl(' + color[0] + ',100%,50%),hsl(' + color[0] + ',100%,50%))',
        'alpha': 'linear-gradient(to ' + direct + ', rgb(' + Math.round(color[0]) + ',' + Math.round(color[1]) + ',' + Math.round(color[2]) + '), transparent),linear-gradient(45deg, #ccc 25%, transparent 25%, transparent 75%, #ccc 75%, #ccc), \nlinear-gradient(45deg, #ccc 25%, transparent 25%, transparent 75%, #ccc 75%, #ccc)'
      };
      return background[model];
    }
  }, {
    key: 'getColor',
    value: function getColor(e) {
      var _props2 = this.props,
          color = _props2.color,
          model = _props2.model,
          direction = _props2.direction;

      var p = (0, _calcEventPosition2.default)(e, this.container);
      var distance = direction === 'vertical' ? p.topP : p.leftP;
      var newColor = {
        'rgb.r': [255 - distance * 255, color[1], color[2]],
        'rgb.g': [color[0], 255 - distance * 255, color[2]],
        'rgb.b': [color[0], color[1], 255 - distance * 255],
        'hsv.h': [360 - 360 * distance, color[1], color[2]],
        'hsv.s': [color[0], 1 - distance, color[2]],
        'hsv.v': [color[0], color[1], 1 - distance],
        'alpha': [color[0], color[1], color[2], distance]
      };
      return newColor[model];
    }
  }, {
    key: 'getPosition',
    value: function getPosition() {
      var _props3 = this.props,
          color = _props3.color,
          model = _props3.model;

      var position = {
        'rgb.r': 1 - color[0] / 255,
        'rgb.g': 1 - color[1] / 255,
        'rgb.b': 1 - color[2] / 255,
        'hsv.h': 1 - color[0] / 360,
        'hsv.s': 1 - color[1],
        'hsv.v': 1 - color[2],
        'alpha': color[3]
      };
      return position[model];
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.unbindEventListeners();
    }
  }, {
    key: 'unbindEventListeners',
    value: function unbindEventListeners() {
      window.removeEventListener('mousemove', this.handleChange);
      window.removeEventListener('mouseup', this.handleMouseUp);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props4 = this.props,
          pointer = _props4.pointer,
          style = _props4.style,
          pointerStyle = _props4.pointerStyle,
          direction = _props4.direction,
          model = _props4.model;

      var position = this.getPosition() * 100;

      var styles = {
        'root': Object.assign({
          position: 'relative',
          height: '100%',
          backgroundImage: this.getBackground(),
          curosr: 'default',
          backgroundSize: model === 'alpha' ? '100% 100%,12px 12px,12px 12px' : null,
          backgroundPosition: model === 'alpha' ? '0 0,0 0,6px 6px' : null,
          backgroundColor: model === 'alpha' ? '#fff' : null
        }, style),
        'pointer': Object.assign(_defineProperty({
          position: 'absolute'
        }, direction === 'vertical' ? 'top' : 'left', position + '%'), pointerStyle)
      };

      return _react2.default.createElement(
        'div',
        {
          style: styles.root,
          ref: function ref(node) {
            return _this2.container = node;
          },
          onMouseDown: this.handleMouseDown,
          onTouchMove: this.handleChange,
          onTouchStart: this.handleChange
        },
        _react2.default.createElement(
          'div',
          { style: styles.pointer },
          pointer
        )
      );
    }
  }]);

  return ColorBar;
}(_react.PureComponent || _react.Component), _class.displayName = 'ColorBar', _class.defaultProps = {
  model: _react.PropTypes.oneOf(['rgb.r', 'rgb.g', 'rgb.b', 'hsv.h', 'hsv.s', 'hsv.v']),
  pointer: _react.PropTypes.node,
  rgb: _react.PropTypes.object,
  hsv: _react.PropTypes.object,
  onChange: _react.PropTypes.func
}, _class.defaultProps = {
  pointer: _react2.default.createElement(_RectPointer2.default, null),
  direction: ''
}, _temp);
exports.default = ColorBar;