'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _chromaJs = require('chroma-js');

var _chromaJs2 = _interopRequireDefault(_chromaJs);

var _PsPointerDoubleTriangle = require('./PsPointerDoubleTriangle');

var _PsPointerDoubleTriangle2 = _interopRequireDefault(_PsPointerDoubleTriangle);

var _PsPointerCircle = require('./PsPointerCircle');

var _PsPointerCircle2 = _interopRequireDefault(_PsPointerCircle);

var _components = require('../../components');

var _components2 = _interopRequireDefault(_components);

var _rgbToHex = require('../../helpers/rgbToHex');

var _rgbToHex2 = _interopRequireDefault(_rgbToHex);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Photoshop = (_temp = _class = function (_React$Component) {
	_inherits(Photoshop, _React$Component);

	function Photoshop(props) {
		_classCallCheck(this, Photoshop);

		var _this = _possibleConstructorReturn(this, (Photoshop.__proto__ || Object.getPrototypeOf(Photoshop)).call(this, props));

		_this.handleChange = function (newColor) {
			_this.setState({ color: newColor });
			_this.props.onChange(newColor);
		};

		_this.handleAccept = function () {
			_this.setState({ currColor: _this.state.color });
			_this.props.onAccept(_this.state.color);
		};

		_this.handleCancel = function () {
			_this.props.onCancel();
		};

		var color = { rgba: (0, _chromaJs2.default)(props.color, props.colorModel).rgba() };
		_this.state = {
			color: color,
			currColor: color
		};
		return _this;
	}

	_createClass(Photoshop, [{
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			var color = { rgba: (0, _chromaJs2.default)(nextProps.color, nextProps.colorModel).rgba() };
			this.setState({ color: color });
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _state = this.state,
			    color = _state.color,
			    currColor = _state.currColor;


			return _react2.default.createElement(
				_components2.default,
				{ style: styles.root, color: color.rgba, colorModel: 'rgba', onChange: function onChange(a) {
						return _this2.handleChange(a);
					} },
				_react2.default.createElement(
					'div',
					{ style: styles.title },
					this.props.title
				),
				_react2.default.createElement(_components.ColorPanel, { pointer: _react2.default.createElement(_PsPointerCircle2.default, null), style: styles.panel }),
				_react2.default.createElement(_components.ColorBar, { direction: 'vertical', pointer: _react2.default.createElement(_PsPointerDoubleTriangle2.default, null), style: styles.bar }),
				_react2.default.createElement(
					'div',
					{ style: styles.color, 'data-color': '1' },
					_react2.default.createElement(
						'p',
						{ style: styles.colorP },
						'new'
					),
					_react2.default.createElement(_components.ColorBlock, { color: (0, _rgbToHex2.default)(color.rgba), style: styles.colorBlock }),
					_react2.default.createElement(_components.ColorBlock, { color: (0, _rgbToHex2.default)(currColor.rgba), style: styles.colorBlock }),
					_react2.default.createElement(
						'p',
						{ style: styles.colorP },
						'current'
					)
				),
				_react2.default.createElement(
					'div',
					{ style: styles.buttons },
					_react2.default.createElement(
						'button',
						{ style: styles.button, onClick: this.handleAccept },
						'OK'
					),
					_react2.default.createElement(
						'button',
						{ style: styles.button, onClick: this.handleCancel },
						'Cancel'
					)
				),
				_react2.default.createElement(
					'div',
					{ style: styles.inputHsv, 'data-color': '1' },
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorRadio, { model: 'hsv.h' }),
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.input, label: 'H:', model: 'hsv.h', rightLabel: '\xB0' })
					),
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorRadio, { model: 'hsv.s' }),
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.input, label: 'S:', model: 'hsv.s', rightLabel: '%', scale: 100 })
					),
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorRadio, { model: 'hsv.v' }),
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.input, label: 'V:', model: 'hsv.v', rightLabel: '%', scale: 100 })
					)
				),
				_react2.default.createElement(
					'div',
					{ style: styles.inputRgb, 'data-color': '1' },
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorRadio, { model: 'rgb.r' }),
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.input, label: 'R:', model: 'rgb.r' })
					),
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorRadio, { model: 'rgb.g' }),
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.input, label: 'G:', model: 'rgb.g' })
					),
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorRadio, { model: 'rgb.b' }),
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.input, label: 'B:', model: 'rgb.b' })
					)
				),
				_react2.default.createElement(
					'div',
					{ style: styles.inputLab, 'data-color': '1' },
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.lab, label: 'L:', model: 'lab.l' })
					),
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.lab, label: 'a:', model: 'lab.a' })
					),
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.lab, label: 'b:', model: 'lab.b' })
					)
				),
				_react2.default.createElement(
					'div',
					{ style: styles.inputCmyk, 'data-color': '1' },
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.input, label: 'C:', model: 'cmyk.c', rightLabel: '%', scale: 100 })
					),
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.input, label: 'M:', model: 'cmyk.m', rightLabel: '%', scale: 100 })
					),
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.input, label: 'Y:', model: 'cmyk.y', rightLabel: '%', scale: 100 })
					),
					_react2.default.createElement(
						'div',
						{ 'data-color': '1', style: styles.inputDiv },
						_react2.default.createElement(_components.ColorInput, { inputStyle: styles.input, label: 'K:', model: 'cmyk.k', rightLabel: '%', scale: 100 })
					)
				),
				_react2.default.createElement(
					'div',
					{ style: styles.inputHex, 'data-color': '1' },
					_react2.default.createElement(_components.ColorInput, { inputStyle: styles.hex, model: 'hex' })
				)
			);
		}
	}]);

	return Photoshop;
}(_react2.default.Component), _class.propTypes = {
	color: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.string]),
	title: _react.PropTypes.node,
	onChange: _react.PropTypes.func,
	onAccept: _react.PropTypes.func,
	onCancel: _react.PropTypes.func,
	model: _react.PropTypes.string,
	colorModel: _react.PropTypes.string
}, _class.defaultProps = {
	title: 'Color Picker',
	color: [255, 0, 0, 1],
	onChange: function onChange() {},
	onAccept: function onAccept() {},
	onCancel: function onCancel() {}
}, _temp);


var styles = {
	root: {
		width: 550,
		height: 354,
		boxShadow: 'rgba(0, 0, 0, 0.247059) 0px 0px 0px 1px, rgba(0, 0, 0, 0.14902) 0px 8px 16px',
		background: '#ededed',
		fontSize: 'Robot nono Sans-serif'
	},
	title: {
		boxSizing: 'border-box',
		position: 'absolute',
		color: '#666',
		left: 0,
		top: 0,
		width: '100%',
		height: 26,
		lineHeight: '26px',
		paddingLeft: 4,
		fontSize: 13,
		background: '#fff'
	},
	panel: {
		position: 'absolute',
		left: 12,
		top: 57,
		width: 255,
		height: 255
	},
	bar: {
		display: 'absolute',
		left: 280,
		top: 57,
		width: 20,
		height: 255
	},
	color: {
		position: 'absolute',
		left: 315,
		top: 44,
		width: 60,
		height: 68
	},
	colorP: {
		margin: 0,
		fontSize: 13,
		textAlign: 'center'
	},
	buttons: {
		position: 'absolute',
		left: 426,
		top: 36
	},
	button: {
		width: 115,
		height: 20,
		marginBottom: 10
	},
	colorBlock: {
		height: 34
	},
	inputHsv: {
		position: 'absolute',
		left: 315,
		top: 167
	},
	inputRgb: {
		position: 'absolute',
		left: 315,
		top: 244
	},
	inputLab: {
		position: 'absolute',
		left: 455,
		top: 167
	},
	inputCmyk: {
		position: 'absolute',
		left: 455,
		top: 244
	},
	inputHex: {
		position: 'absolute',
		left: 318,
		top: 319
	},
	inputDiv: {
		marginBottom: 4,
		height: 19
	},
	input: {
		width: 45,
		height: 20
	},
	lab: {
		width: 56,
		height: 20
	},
	hex: {
		width: 80,
		height: 20
	}
};

exports.default = Photoshop;